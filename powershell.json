{
		"Regex shortcuts": {
		"prefix": "_regx",
		"body": [
			"<#",
			"Operator - Logic",
			"Value    - Exact characters anywhere in original value",
			".        - Any single character, except newline",
			"[value]  - At least one character in brackets",
			"[range]  - At least one character within range",
			"^        - Beginning character(s)",
			"\\$        - End character(s)",
			"\\w       - Any word character",
			"\\d       - Any decimal digit",
			"*        - Zero or more{0,}",
			"+        - One or more{1,}",
			"?        - Zero or one{0,1}",
			"{n}      - Exactly n matches",
			"{n,}     - At least n matches",
			"{n,m}    - At least n, but no more than m, matches$0",
			"#>"
		],
		"description": "Quick reference of common regex expressions"
	},
	"SQL SMO": {
		"prefix": "_smo",
		"body": [
			"${1}\\$Servers = get-content ${2}\"C:\\Scripts\\Powershell\\Lookups\\Servers.txt\" ",
			"${3}\\$Server = \"\\$ENV:COMPUTERNAME\\\\${4}sql2016\"",
			"\\$SMOServer = new-object ('Microsoft.SQLServer.Management.Smo.Server') \\$Server",
			"$0"
		],
		"description": "SQL Server SMO line"
	},
	"For each SQL DB": {
		"prefix": "_foreachDB",
		"body": [
			"foreach(\\$DB in \\$SMOServer.databases){$0}",
			"    ",
			""
		],
		"description": "For each loop for SQL Server database itteration"
	},
	"SQL Assemblies": {
		"prefix": "_SQLAssemblies",
		"body": [
			"[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SMO') | Out-Null ",
			"[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SMOExtended') | Out-Null "
		],
		"description": "Lines to load SQL Server assemblies"
	},
	"SQL Server Configuration Manager": {
		"prefix": "_conman",
		"body": [
			"<# SQL Server 2012 #> mmc C:\\Windows\\SysWOW64\\SQLServerManager11.msc${1}",
			"<# SQL Server 2014 #> mmc C:\\Windows\\SysWOW64\\SQLServerManager12.msc${2}",
			"<# SQL Server 2016 #> mmc C:\\Windows\\SysWOW64\\SQLServerManager13.msc${3}",
			"<# SQL Server 2017 #> mmc C:\\Windows\\SysWOW64\\SQLServerManager14.msc${4}",
			"<# SQL Server 2019 #> mmc C:\\Windows\\SysWOW64\\SQLServerManager15.msc${5}"
		],
		"description": "location and launcher for SQL Server Configuration Manager msc snappin"
	},
	"Event Viewer": {
		"prefix": "_eventviewer",
		"body": [
			"C:\\WINDOWS\\system32\\eventvwr.msc${0}"
		],
		"description": "location and launcher for SQL Server Configuration Manager msc snappin"
	},
	"Help because Get-Help doesn't have ShowWindow": {
		"prefix": "_help",
		"body": [
			"get-help ${0} -full | clip ; \\$file = \"C:\\temp\\hlp${0}.txt\"; New-Item -ItemType File -Path \\$file -Force; set-content -Path \\$file -Value \\$(Get-Clipboard); ii \\$file"
		],
		"description": "Lets you enter the name of a command and paste the content into Notepad for viewing."
	},
	"Credential": {
		"prefix": "_Cred_Single",
		"body": [
			"$$Cred | Export-CliXml -Path \"\\$\{{env:\\userprofile}\\Secret.Cred\"",
		],
		"description": "Snippets for creating a secure file for credential details and for importing credential from a file. with thanks for code example to @Jaap_Brasser - https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/"
	},
	"Type Enumeration values": {
		"prefix": "_enum",
		"body": [
			"# example: $sql.PerfMonMode.GetType()",
			"# example: [System.Enum]::GetValues([Microsoft.SqlServer.Management.Smo.PerfMonMode])",
			"${1:VariableName}.${2:PropertyName}.GetType().FullName",
			"[System.Enum]::GetValues([Microsoft.SqlServer.Management.Smo.${3:FullNameFromGetTypeResults}])${0}",
			""
		],
		"description": "Snippet to fill System Enumeration code to get possible values for a GetType that gives System.Enum type."
	},
	"Error handler": {
		"prefix":"_ErrorHandling",
		"body": [
			"#Error handling", 
			"\\$ErrorActionPreference = \"stop\";",
			"Trap {",
			    "\\$err = \\$_.Exception",
			    "while (\\$err.InnerException ) {",
			        "\\$err = \\$err.InnerException",
			        "Write-Output \\$err.Message",
				"};",
			"};"
		],
		"description": "Snippet to add default error handler section."
	},
	"MSLicense":{
		"prefix": "_License",
		"body": ["<#",
".SYNOPSIS",
"    ${1}",
".DESCRIPTION",
"    ${2}",
".EXAMPLE",
"    ${3}",
".INPUTS",
"    ${4}",
".OUTPUTS",
"    ${5}",
"-----------------------------------------------------------------------------------------------------------------------------------",
"Script name  : ${6}",
"Authors      : ${7}",
"Version      : ${8}",
"Dependencies : ${9}",
"-----------------------------------------------------------------------------------------------------------------------------------",
"-----------------------------------------------------------------------------------------------------------------------------------",
"Version Changes:",
"Date:       Version: Changed By:     Info:",
"    ${10}",
"-----------------------------------------------------------------------------------------------------------------------------------",
"DISCLAIMER",
"   THIS CODE IS SAMPLE CODE. THESE SAMPLES ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND.",
"   MICROSOFT FURTHER DISCLAIMS ALL IMPLIED WARRANTIES INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES",
"   OF MERCHANTABILITY OR OF FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK ARISING OUT OF THE USE OR",
"   PERFORMANCE OF THE SAMPLES REMAINS WITH YOU. IN NO EVENT SHALL MICROSOFT OR ITS SUPPLIERS BE LIABLE FOR",
"   ANY DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS",
"   INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR OTHER PECUNIARY LOSS) ARISING OUT OF THE USE OF OR",
"   INABILITY TO USE THE SAMPLES, EVEN IF MICROSOFT HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.",
"   BECAUSE SOME STATES DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR",
"   INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU.",
"#>",
"    ${0}"],
		"description": "Snippet for Microsoft distributed scripts"
	},
	"Custom Object": {
		"prefix": "_CustomObject",
		"body": [
			"$$result = New-Object PSObject -Property @{",
            	"'Name' = 'me'",
            	"'Id' = 17",
            	"'Status' = New-Object PSObject -Property @{",
	                "'Code'= 'OK'",
					"'Time' = Get-Date",
				"}",
			"}"
			],
			"description": "Sample custom object creation."
	}
}
